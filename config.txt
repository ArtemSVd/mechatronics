ssh-keygen -t rsa -C "artem-vdovin@mail.ru"     - создание ключей

git config --global user.name "Artem Vdovin"
git config --global user.email "artem-vdovin@mail.ru"

git clone repository-url    -  склонировать на комп проект из гитхаба
git remote -v      -  просмотреть ветки
git add filename    - добавить файл в индексацию

После добавления:
git reset    - отменить добавление
git commit -m "some message"  - закоммитить добавление

git log - история коммитов

git push    - загрузить коммит в удаленный репозиторий
git pull    - загрузка из удаленного репозитория

Программы
git gui и gitk

Отмена изменений:
1) Файлы не добавляли в индекс:
    git checkout -- file-name  - для одного файла
    git checkout .    - для всех
    Вернуть изменения после этой команды невозможно
    git clean -xdf   -  удаление новых файлов
2) Файл добавлен в индекс
    Можно в gui убрать из индекса -> пункт 1
    git reset HEAD file-name     - убрать из индекса
3) Файл закоммитили
    git commit --amend -m "message"   -  дописать коммит
    git reset HEAD^^ или  git reset HEAD~1   - количество ушек(сколько коммитов назад) или конкретное число

Подробнее о git reset
git reset --soft    - выпадает в индекс
git reset --mixed   - выпадает в файловую систему
git reset --hard    - полное удаление изменений
Подробнее о git revert - что-то запушили в уд.репозиторий
git revert "sha1"   -  отмена коммита в уд.репозитории

Создание веток:
git checkout -b "branch name" - создание и переход в ветку
git checkout "branch name" - переход в ветку
git branch --all    - показать ветки в репозитории
git merge "branch name"   - слияние ветвей(вызывать из ветви в которую нужно влить) - fast forward merge

Решение конфликтов:
Делать часто коммиты.
Не делать правки в знаках табуляции, пробелах и тд (для гита это новая версия)
Частые merge 
git merge --abort    - отменить merge
git checkout --Xours --Xtheirs   - если есть конфликт, то чужая версия правильная(Xtheirs), Xours - наоборот
Можно ревертить коммиты
Можно использовать merge tool

rebase - изменение head основной ветки, так для твоей ветки будут доступны фичи из основной без слияния
cherry-pick - копирование коммита из одной ветви в другую

Теги.
git tag tagName    - добавление тега к коммиту
git push --tags    - запушить теги    
git tag --list
Смысл тегов: визуальное выделение коммитов

Stashing - специальное хранилище, куда можно перенести любые изменение временно и потом к ним вернутся
git stash save "description"   - сохранить изменения в stash
git stash list  - просмотр стешей
git stash apply stash-name   - вытащить из стеша
git stash drop stash-name  -  удалить ненужный стеш

